(function(){var a=io.connect();var b=Backbone.sync;Backbone.sync=function(a,c,d){var e=c.backend||c.collection&&c.collection.backend;d=_.clone(d);var f=d.error||function(){};var g=d.success||function(){};delete d.error;delete d.success;if(e){e.ready(function(){var b={method:a,model:c.toJSON(),options:d};e.socket.emit("sync",b,function(a,b){if(a){f(a)}else{g(b)}})})}else{b(a,c,d)}};var c=function(a){var b=null;var c=[];var d=false;this.add=function(e){if(d){e.apply(a,b)}else{c.push(e)}},this.resolve=function(){if(!d){b=arguments;d=true;var e;while(e=c.shift()){e.apply(a,arguments)}c=null}}};var d=function(a,b,c){var d=function(){};d.prototype=a.prototype;c||(c=[]);c.forEach(function(a){_.extend(d.prototype,a)});b.prototype=new d;b.prototype.constructor=b;return _.extend(b,a)};var e=function(b){var d=b.backend;var e=new c(b);var f={name:d,socket:a.of(d),options:null,ready:e.add};f.socket.emit("listen",function(a){f.options=a;f.socket.on("synced",function(a,c){var d=f.options.event;b.trigger(d,a,c);b.trigger(d+":"+a,c)});e.resolve()});return f};var f={bindBackend:function(){var a=this;var b=this.model.prototype.idAttribute;this.backend.ready(function(){var c=a.backend.options.event;a.bind(c+":create",function(b){a.add(b)});a.bind(c+":update",function(c){var d=a.get(c[b]);if(d)d.set(c)});a.bind(c+":delete",function(c){a.remove(c[b])})})}};Backbone.Collection=function(a){var b=function(){if(this.backend){this.backend=e(this)}a.apply(this,arguments)};return d(a,b,[f])}(Backbone.Collection)})()